<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.x8.mt.dao.IMetadataManagementDao">

	<select id="getMetamodelPrivateInfo" resultType="com.x8.mt.entity.Metamodel_datatype">
		select * from metamodel_datatype where metamodelid=#{metamodelidStr}
	</select>

	<select id="getHistoryMetadataPrivateInfo" resultType="java.lang.String">
		select attributes from metadata_tank where id=#{tankidStr}
	</select>

	<select id="getHistoryMetadataCommonInfo" resultType="com.x8.mt.entity.MetadataTank">
		select * from metadata_tank where keyid=#{metadataidStr}
	</select>

	<delete id="deleteMetadataDepend">
		DELETE FROM metadata_relation
		WHERE id=#{relationid}
	</delete>

	<select id="showMetadataDepend" resultType="java.util.Map">
		select t1.id as
		relationid,t2.id as targetmetadataid,t2.name as
		targetmetadataname,t2.description as description from metadata as t2
		inner join
		(select id,relatedmetadataid from metadata_relation where
		metadataid=#{metadataId} and type='DEPENDENCY') t1
		on t2.id =
		t1.relatedmetadataid
	</select>

	<insert id="addMetadataDepend" useGeneratedKeys="true"
		keyProperty="ID" parameterType="Map">
		insert into
		metadata_relation(metadataid,relatedmetadataid,type)
		values(#{metadataid},#{relatedmetadataid},'DEPENDENCY')
	</insert>

	<select id="getDependMetadata" resultType="java.util.Map">
		select t3.id as
		metadataid,t3.name as metadataname,t3.description as description from
		metadata as t3 where t3.metamodelid in (select t2.relatedmetamodelid
		from
		metamodel_relation as t2 where t2.metamodelid in (select
		t1.metamodelid
		from metadata as t1 where t1.id=#{metadataId}) and
		t2.type='DEPENDENCY') and t3.id not in (select t4.relatedmetadataid
		from metadata_relation as t4 where t4.metadataid=#{metadataId} and
		t4.type='DEPENDENCY');
	</select>

	<select id="searchMetadata" resultType="com.x8.mt.entity.Metadata">
		select * from metadata
		where name like "%"#{key}"%" or description like "%"#{key}"%";
	</select>

	<select id="getMetadataList" parameterType="Map" resultType="java.util.Map">
		select t2.id as
		metadataid,t2.name as metadataname
		<if test="medamodelId == 32">,t2.description as description </if>
		from
		metadata as t2 where t2.id in
		(select t1.relatedmetadataid from
		metadata_relation as t1 where
		t1.metadataid=#{metadataId} and
		t1.type='COMPOSITION') and
		t2.metamodelid=#{medamodelId};
	</select>

	<select id="getDatabaseMetadataList" resultType="java.util.Map">
		select id as
		metadataid,name as metadataname from
		metadata where
		metamodelid=#{metaModelId};
	</select>

	<delete id="daleteMetadata">
		DELETE FROM metadata WHERE id=#{metadataId}
	</delete>

	<update id="updateMetadatAttributes" parameterType="com.x8.mt.entity.Metadata">
		UPDATE
		metadata
		SET attributes=#{ATTRIBUTES}
		WHERE id = #{ID};
	</update>

	<update id="updateMetadata" parameterType="com.x8.mt.entity.Metadata">
		UPDATE metadata
		SET
		name=#{NAME},
		description=#{DESCRIPTION},
		updatetime=#{UPDATETIME},
		version=#{VERSION}
		WHERE id = #{ID};
	</update>

	<update id="updataMetadataCheckstatus" parameterType="com.x8.mt.entity.Metadata">
		update
		metadata set checkstatus = #{CHECKSTATUS} where id = #{ID}
	</update>

	<!-- allen -->
	<select id="getAttributesField" resultType="java.lang.String">
		select name from
		metamodel_datatype where metamodelid=#{metaModelId};
	</select>

	<insert id="insertMetadata" useGeneratedKeys="true" keyProperty="ID"
		parameterType="com.x8.mt.entity.Metadata">
		insert into
		metadata(name,collectjobid,description,metamodelid,createtime,updatetime,checkstatus,attributes,version)
		values(#{NAME},NULL,#{DESCRIPTION},#{METAMODELID},#{CREATETIME},#{UPDATETIME},#{CHECKSTATUS},#{ATTRIBUTES},#{VERSION})
	</insert>

	<!-- allen -->
	<select id="getMetadata" resultType="com.x8.mt.entity.Metadata">
		select * from metadata
		where
		id=#{metadataId};
	</select>

	<!-- allen -->
	<select id="getMetadataViewFirstLevel" parameterType="int"
		resultType="java.util.Map">
		select
		t4.package_id,t4.package_name,t4.metadata_id,t4.metadata_name,t4.metadata_metamodelid
		from
		(select t2.id as package_id,t2.name as package_name,t3.id as
		metadata_id,t3.name as metadata_name,t3.metamodelid as
		metadata_metamodelid from metadata as t3 RIGHT JOIN
		(select
		t1.id,t1.name,t1.childmetamodelid from metadata_view_node as
		t1
		where
		t1.viewid=#{viewID}) as t2
		ON
		t3.metamodelid =
		t2.childmetamodelid) as t4
		where t4.metadata_id not in (select
		t5.relatedmetadataid from
		metadata_relation as t5 where
		t4.metadata_id=t5.relatedmetadataid and
		t5.type='COMPOSITION') order by
		t4.package_id asc;
	</select>

	<!-- allen -->
	<select id="getSonMetadata" resultType="java.util.Map">
		select t1.id as
		metadata_id,t1.name as metadata_name,t1.metamodelid as
		metadata_metamodelid from metadata as t1 where t1.id in (select
		relatedmetadataid from metadata_relation where
		metadataid=#{metadata_id} and type='COMPOSITION')
	</select>

	<!-- allen -->
	<select id="getFieldMetadata" resultType="com.x8.mt.entity.Metadata">
		select * from metadata
		where id in (select relatedmetadataid from metadata_relation where
		metadataid=#{tableMetadataId} and type='COMPOSITION');
	</select>
</mapper>
